19/05/2021 18:02:53 TRACE - <MethodOverride for public com.epam.esm.model.entity.Tag com.epam.esm.service.service.tag.TagServiceImpl.readMostlyUsedTag() throws com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public java.util.List com.epam.esm.service.service.tag.TagServiceImpl.readAll() throws com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public java.util.Optional com.epam.esm.service.service.tag.TagServiceImpl.readOptional(int): null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public boolean java.lang.Object.equals(java.lang.Object): null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public java.lang.String java.lang.Object.toString(): null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public native int java.lang.Object.hashCode(): null>
19/05/2021 18:02:53 TRACE - <MethodOverride for protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public default java.lang.String com.epam.esm.service.service.EntityService.decodeParam(java.lang.String): null>
19/05/2021 18:02:53 TRACE - <Eagerly caching bean 'tagServiceImpl' to allow for resolving potential circular references>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 TRACE - <Adding transactional method 'com.epam.esm.service.service.tag.TagServiceImpl$$EnhancerBySpringCGLIB$$6b749e8.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:53 TRACE - <Creating implicit proxy for bean 'tagServiceImpl' with 0 common interceptors and 1 specific interceptors>
19/05/2021 18:02:53 TRACE - <Creating CGLIB proxy: SingletonTargetSource for target object [com.epam.esm.service.service.tag.TagServiceImpl$$EnhancerBySpringCGLIB$$6b749e8@756200d1]>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Tag com.epam.esm.service.service.tag.TagServiceImpl.update(com.epam.esm.model.entity.Tag)>
19/05/2021 18:02:53 TRACE - <Adding transactional method 'com.epam.esm.service.service.tag.TagServiceImpl$$EnhancerBySpringCGLIB$$6b749e8.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.tag.TagServiceImpl.update(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException,com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Tag com.epam.esm.service.service.tag.TagServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.service.service.tag.TagServiceImpl.read(org.springframework.util.MultiValueMap) throws com.epam.esm.service.exceptions.NotFoundException,com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.tag.TagServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:53 TRACE - <Adding transactional method 'com.epam.esm.service.service.tag.TagServiceImpl$$EnhancerBySpringCGLIB$$6b749e8.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public void com.epam.esm.service.service.tag.TagServiceImpl.delete(int) throws com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:53 TRACE - <Adding transactional method 'com.epam.esm.service.service.tag.TagServiceImpl$$EnhancerBySpringCGLIB$$6b749e8.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.tag.TagServiceImpl.create(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:53 TRACE - <Adding transactional method 'com.epam.esm.service.service.tag.TagServiceImpl$$EnhancerBySpringCGLIB$$6b749e8.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Tag com.epam.esm.service.service.tag.TagServiceImpl.create(com.epam.esm.model.entity.Tag) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.persistence.util.finder.impl.TagFinder com.epam.esm.service.service.tag.TagServiceImpl.getFinder()>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.persistence.util.finder.EntityFinder com.epam.esm.service.service.tag.TagServiceImpl.getFinder()>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Tag com.epam.esm.service.service.tag.TagServiceImpl.readMostlyUsedTag() throws com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.service.service.tag.TagServiceImpl.readAll() throws com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public java.util.Optional com.epam.esm.service.service.tag.TagServiceImpl.readOptional(int)>
19/05/2021 18:02:53 TRACE - <Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()>
19/05/2021 18:02:53 TRACE - <Found 'hashCode' method: public native int java.lang.Object.hashCode()>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public default java.lang.String com.epam.esm.service.service.EntityService.decodeParam(java.lang.String)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public default int org.springframework.aop.framework.Advised.getAdvisorCount()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()>
19/05/2021 18:02:53 TRACE - <Finished creating instance of bean 'tagServiceImpl'>
19/05/2021 18:02:53 DEBUG - <Creating shared instance of singleton bean 'certificateServiceImpl'>
19/05/2021 18:02:53 TRACE - <Creating instance of bean 'certificateServiceImpl'>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 DEBUG - <Creating shared instance of singleton bean 'certificateDAOImpl'>
19/05/2021 18:02:53 TRACE - <Creating instance of bean 'certificateDAOImpl'>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 TRACE - <Eagerly caching bean 'certificateDAOImpl' to allow for resolving potential circular references>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'entityManagerFactory'>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 TRACE - <Creating CGLIB proxy: SingletonTargetSource for target object [com.epam.esm.persistence.dao.certificate.CertificateDAOImpl@5b1f5fcc]>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.persistence.dao.certificate.CertificateDAOImpl.update(com.epam.esm.model.entity.CustomEntity)>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Certificate com.epam.esm.persistence.dao.certificate.CertificateDAOImpl.update(com.epam.esm.model.entity.Certificate)>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public void com.epam.esm.persistence.dao.certificate.CertificateDAOImpl.delete(int)>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.persistence.dao.certificate.CertificateDAOImpl.create(com.epam.esm.model.entity.CustomEntity)>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Certificate com.epam.esm.persistence.dao.certificate.CertificateDAOImpl.create(com.epam.esm.model.entity.Certificate)>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.persistence.dao.certificate.CertificateDAOImpl.findAll()>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public javax.persistence.metamodel.Metamodel com.epam.esm.persistence.dao.certificate.CertificateDAOImpl.getMetamodel()>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.persistence.dao.certificate.CertificateDAOImpl.getById(int)>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Certificate com.epam.esm.persistence.dao.certificate.CertificateDAOImpl.getById(int)>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.persistence.dao.certificate.CertificateDAOImpl.findByParameters(com.epam.esm.persistence.util.finder.EntityFinder)>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.persistence.dao.certificate.CertificateDAOImpl.finadByQuery(java.lang.String)>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public javax.persistence.criteria.CriteriaBuilder com.epam.esm.persistence.dao.certificate.CertificateDAOImpl.getBuilder()>
19/05/2021 18:02:53 TRACE - <Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()>
19/05/2021 18:02:53 TRACE - <Found 'hashCode' method: public native int java.lang.Object.hashCode()>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public default int org.springframework.aop.framework.Advised.getAdvisorCount()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()>
19/05/2021 18:02:53 TRACE - <Finished creating instance of bean 'certificateDAOImpl'>
19/05/2021 18:02:53 DEBUG - <Creating shared instance of singleton bean 'certificateValidator'>
19/05/2021 18:02:53 TRACE - <Creating instance of bean 'certificateValidator'>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 TRACE - <Eagerly caching bean 'certificateValidator' to allow for resolving potential circular references>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 TRACE - <Finished creating instance of bean 'certificateValidator'>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'tagServiceImpl'>
19/05/2021 18:02:53 DEBUG - <Autowiring by type from bean name 'certificateServiceImpl' via constructor to bean named 'certificateDAOImpl'>
19/05/2021 18:02:53 DEBUG - <Autowiring by type from bean name 'certificateServiceImpl' via constructor to bean named 'certificateValidator'>
19/05/2021 18:02:53 DEBUG - <Autowiring by type from bean name 'certificateServiceImpl' via constructor to bean named 'tagServiceImpl'>
19/05/2021 18:02:53 TRACE - <MethodOverride for public com.epam.esm.model.entity.Certificate com.epam.esm.service.service.certificate.CertificateServiceImpl.update(com.epam.esm.model.entity.Certificate) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.certificate.CertificateServiceImpl.update(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException,com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.certificate.CertificateServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public java.util.List com.epam.esm.service.service.certificate.CertificateServiceImpl.read(org.springframework.util.MultiValueMap) throws com.epam.esm.service.exceptions.BadRequestException,com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public com.epam.esm.model.entity.Certificate com.epam.esm.service.service.certificate.CertificateServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public void com.epam.esm.service.service.certificate.CertificateServiceImpl.delete(int) throws com.epam.esm.service.exceptions.BadRequestException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.certificate.CertificateServiceImpl.create(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public com.epam.esm.model.entity.Certificate com.epam.esm.service.service.certificate.CertificateServiceImpl.create(com.epam.esm.model.entity.Certificate) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public com.epam.esm.model.entity.Certificate com.epam.esm.service.service.certificate.CertificateServiceImpl.patch(com.epam.esm.model.entity.Certificate) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException,com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public com.epam.esm.persistence.util.finder.impl.CertificateFinder com.epam.esm.service.service.certificate.CertificateServiceImpl.getFinder(): LookupOverride for method 'getFinder'>
19/05/2021 18:02:53 TRACE - <MethodOverride for public com.epam.esm.persistence.util.finder.EntityFinder com.epam.esm.service.service.certificate.CertificateServiceImpl.getFinder(): LookupOverride for method 'getFinder'>
19/05/2021 18:02:53 TRACE - <MethodOverride for public java.util.List com.epam.esm.service.service.certificate.CertificateServiceImpl.readAll() throws com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public java.util.Optional com.epam.esm.service.service.certificate.CertificateServiceImpl.readOptional(int): null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public boolean java.lang.Object.equals(java.lang.Object): null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public java.lang.String java.lang.Object.toString(): null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public native int java.lang.Object.hashCode(): null>
19/05/2021 18:02:53 TRACE - <MethodOverride for protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException: null>
19/05/2021 18:02:53 TRACE - <MethodOverride for public default java.lang.String com.epam.esm.service.service.EntityService.decodeParam(java.lang.String): null>
19/05/2021 18:02:53 TRACE - <Eagerly caching bean 'certificateServiceImpl' to allow for resolving potential circular references>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 TRACE - <Adding transactional method 'com.epam.esm.service.service.certificate.CertificateServiceImpl$$EnhancerBySpringCGLIB$$22ef80.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:53 TRACE - <Creating implicit proxy for bean 'certificateServiceImpl' with 0 common interceptors and 1 specific interceptors>
19/05/2021 18:02:53 TRACE - <Creating CGLIB proxy: SingletonTargetSource for target object [com.epam.esm.service.service.certificate.CertificateServiceImpl$$EnhancerBySpringCGLIB$$22ef80@29ea5e0]>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Certificate com.epam.esm.service.service.certificate.CertificateServiceImpl.update(com.epam.esm.model.entity.Certificate) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:53 TRACE - <Adding transactional method 'com.epam.esm.service.service.certificate.CertificateServiceImpl$$EnhancerBySpringCGLIB$$22ef80.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.certificate.CertificateServiceImpl.update(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException,com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.certificate.CertificateServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.service.service.certificate.CertificateServiceImpl.read(org.springframework.util.MultiValueMap) throws com.epam.esm.service.exceptions.BadRequestException,com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Certificate com.epam.esm.service.service.certificate.CertificateServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:53 TRACE - <Adding transactional method 'com.epam.esm.service.service.certificate.CertificateServiceImpl$$EnhancerBySpringCGLIB$$22ef80.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public void com.epam.esm.service.service.certificate.CertificateServiceImpl.delete(int) throws com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:53 TRACE - <Adding transactional method 'com.epam.esm.service.service.certificate.CertificateServiceImpl$$EnhancerBySpringCGLIB$$22ef80.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.certificate.CertificateServiceImpl.create(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:53 TRACE - <Adding transactional method 'com.epam.esm.service.service.certificate.CertificateServiceImpl$$EnhancerBySpringCGLIB$$22ef80.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Certificate com.epam.esm.service.service.certificate.CertificateServiceImpl.create(com.epam.esm.model.entity.Certificate) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:53 TRACE - <Adding transactional method 'com.epam.esm.service.service.certificate.CertificateServiceImpl$$EnhancerBySpringCGLIB$$22ef80.patch' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Certificate com.epam.esm.service.service.certificate.CertificateServiceImpl.patch(com.epam.esm.model.entity.Certificate) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException,com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.persistence.util.finder.impl.CertificateFinder com.epam.esm.service.service.certificate.CertificateServiceImpl.getFinder()>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.persistence.util.finder.EntityFinder com.epam.esm.service.service.certificate.CertificateServiceImpl.getFinder()>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.service.service.certificate.CertificateServiceImpl.readAll() throws com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public java.util.Optional com.epam.esm.service.service.certificate.CertificateServiceImpl.readOptional(int)>
19/05/2021 18:02:53 TRACE - <Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()>
19/05/2021 18:02:53 TRACE - <Found 'hashCode' method: public native int java.lang.Object.hashCode()>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException>
19/05/2021 18:02:53 TRACE - <Unable to apply any optimizations to advised method: public default java.lang.String com.epam.esm.service.service.EntityService.decodeParam(java.lang.String)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public default int org.springframework.aop.framework.Advised.getAdvisorCount()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:53 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()>
19/05/2021 18:02:53 TRACE - <Finished creating instance of bean 'certificateServiceImpl'>
19/05/2021 18:02:53 DEBUG - <Creating shared instance of singleton bean 'certificateDTOMapper'>
19/05/2021 18:02:53 TRACE - <Creating instance of bean 'certificateDTOMapper'>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 DEBUG - <Creating shared instance of singleton bean 'modelMapper'>
19/05/2021 18:02:53 TRACE - <Creating instance of bean 'modelMapper'>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'restappApplication'>
19/05/2021 18:02:53 TRACE - <Eagerly caching bean 'modelMapper' to allow for resolving potential circular references>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:53 TRACE - <Finished creating instance of bean 'modelMapper'>
19/05/2021 18:02:53 DEBUG - <Autowiring by type from bean name 'certificateDTOMapper' via constructor to bean named 'modelMapper'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'certificateDTOMapper' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'certificateDTOMapper'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'tagDTOMapper'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'tagDTOMapper'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'modelMapper'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'tagDTOMapper' via constructor to bean named 'modelMapper'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'tagDTOMapper' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'tagDTOMapper'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'certificateController' via constructor to bean named 'tagServiceImpl'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'certificateController' via constructor to bean named 'certificateServiceImpl'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'certificateController' via constructor to bean named 'certificateDTOMapper'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'certificateController' via constructor to bean named 'tagDTOMapper'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'certificateController' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'certificateController'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'tagController'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'tagController'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'tagServiceImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'certificateServiceImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'certificateDTOMapper'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'tagDTOMapper'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'tagController' via constructor to bean named 'tagServiceImpl'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'tagController' via constructor to bean named 'certificateServiceImpl'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'tagController' via constructor to bean named 'certificateDTOMapper'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'tagController' via constructor to bean named 'tagDTOMapper'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'tagController' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'tagController'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'userController'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'userController'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'orderServiceImpl'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'orderServiceImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'orderDAOImpl'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'orderDAOImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'orderDAOImpl' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'entityManagerFactory'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Creating CGLIB proxy: SingletonTargetSource for target object [com.epam.esm.persistence.dao.order.OrderDAOImpl@f60c14e]>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.persistence.dao.order.OrderDAOImpl.update(com.epam.esm.model.entity.CustomEntity)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Order com.epam.esm.persistence.dao.order.OrderDAOImpl.update(com.epam.esm.model.entity.Order)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public void com.epam.esm.persistence.dao.order.OrderDAOImpl.delete(int)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.persistence.dao.order.OrderDAOImpl.create(com.epam.esm.model.entity.CustomEntity)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Order com.epam.esm.persistence.dao.order.OrderDAOImpl.create(com.epam.esm.model.entity.Order)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.persistence.dao.order.OrderDAOImpl.findAll()>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public javax.persistence.metamodel.Metamodel com.epam.esm.persistence.dao.order.OrderDAOImpl.getMetamodel()>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.persistence.dao.order.OrderDAOImpl.getById(int)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Order com.epam.esm.persistence.dao.order.OrderDAOImpl.getById(int)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.persistence.dao.order.OrderDAOImpl.findByParameters(com.epam.esm.persistence.util.finder.EntityFinder)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public javax.persistence.criteria.CriteriaBuilder com.epam.esm.persistence.dao.order.OrderDAOImpl.getBuilder()>
19/05/2021 18:02:54 TRACE - <Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()>
19/05/2021 18:02:54 TRACE - <Found 'hashCode' method: public native int java.lang.Object.hashCode()>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public default int org.springframework.aop.framework.Advised.getAdvisorCount()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'orderDAOImpl'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'orderValidator'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'orderValidator'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'orderValidator' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'orderValidator'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'userServiceImpl'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'userServiceImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'userDAOImpl'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'userDAOImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'userDAOImpl' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'entityManagerFactory'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Creating CGLIB proxy: SingletonTargetSource for target object [com.epam.esm.persistence.dao.user.UserDAOImpl@35840ecc]>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.persistence.dao.user.UserDAOImpl.update(com.epam.esm.model.entity.CustomEntity)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.User com.epam.esm.persistence.dao.user.UserDAOImpl.update(com.epam.esm.model.entity.User)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public void com.epam.esm.persistence.dao.user.UserDAOImpl.delete(int)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.persistence.dao.user.UserDAOImpl.create(com.epam.esm.model.entity.CustomEntity)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.User com.epam.esm.persistence.dao.user.UserDAOImpl.create(com.epam.esm.model.entity.User)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.persistence.dao.user.UserDAOImpl.findAll()>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public javax.persistence.metamodel.Metamodel com.epam.esm.persistence.dao.user.UserDAOImpl.getMetamodel()>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.persistence.dao.user.UserDAOImpl.getById(int)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.User com.epam.esm.persistence.dao.user.UserDAOImpl.getById(int)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.persistence.dao.user.UserDAOImpl.findByParameters(com.epam.esm.persistence.util.finder.EntityFinder)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public javax.persistence.criteria.CriteriaBuilder com.epam.esm.persistence.dao.user.UserDAOImpl.getBuilder()>
19/05/2021 18:02:54 TRACE - <Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()>
19/05/2021 18:02:54 TRACE - <Found 'hashCode' method: public native int java.lang.Object.hashCode()>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public default int org.springframework.aop.framework.Advised.getAdvisorCount()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'userDAOImpl'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'userValidator'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'userValidator'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'userValidator' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'userValidator'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'userServiceImpl' via constructor to bean named 'userDAOImpl'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'userServiceImpl' via constructor to bean named 'userValidator'>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.user.UserServiceImpl.update(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException,com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.model.entity.User com.epam.esm.service.service.user.UserServiceImpl.update(com.epam.esm.model.entity.User): null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public java.util.List com.epam.esm.service.service.user.UserServiceImpl.read(org.springframework.util.MultiValueMap) throws com.epam.esm.service.exceptions.NotFoundException,com.epam.esm.service.exceptions.BadRequestException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.model.entity.User com.epam.esm.service.service.user.UserServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.user.UserServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public void com.epam.esm.service.service.user.UserServiceImpl.delete(int): null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.user.UserServiceImpl.create(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.model.entity.User com.epam.esm.service.service.user.UserServiceImpl.create(com.epam.esm.model.entity.User): null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.persistence.util.finder.EntityFinder com.epam.esm.service.service.user.UserServiceImpl.getFinder(): LookupOverride for method 'getFinder'>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.persistence.util.finder.impl.UserFinder com.epam.esm.service.service.user.UserServiceImpl.getFinder(): LookupOverride for method 'getFinder'>
19/05/2021 18:02:54 TRACE - <MethodOverride for public java.util.List com.epam.esm.service.service.user.UserServiceImpl.readAll() throws com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public java.util.Optional com.epam.esm.service.service.user.UserServiceImpl.readOptional(int): null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public boolean java.lang.Object.equals(java.lang.Object): null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public java.lang.String java.lang.Object.toString(): null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public native int java.lang.Object.hashCode(): null>
19/05/2021 18:02:54 TRACE - <MethodOverride for protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public default java.lang.String com.epam.esm.service.service.EntityService.decodeParam(java.lang.String): null>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'userServiceImpl' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Adding transactional method 'com.epam.esm.service.service.user.UserServiceImpl$$EnhancerBySpringCGLIB$$2c43f0c8.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:54 TRACE - <Creating implicit proxy for bean 'userServiceImpl' with 0 common interceptors and 1 specific interceptors>
19/05/2021 18:02:54 TRACE - <Creating CGLIB proxy: SingletonTargetSource for target object [com.epam.esm.service.service.user.UserServiceImpl$$EnhancerBySpringCGLIB$$2c43f0c8@1e54e900]>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.user.UserServiceImpl.update(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException,com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.User com.epam.esm.service.service.user.UserServiceImpl.update(com.epam.esm.model.entity.User)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.service.service.user.UserServiceImpl.read(org.springframework.util.MultiValueMap) throws com.epam.esm.service.exceptions.NotFoundException,com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.User com.epam.esm.service.service.user.UserServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.user.UserServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public void com.epam.esm.service.service.user.UserServiceImpl.delete(int)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.user.UserServiceImpl.create(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:54 TRACE - <Adding transactional method 'com.epam.esm.service.service.user.UserServiceImpl$$EnhancerBySpringCGLIB$$2c43f0c8.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.User com.epam.esm.service.service.user.UserServiceImpl.create(com.epam.esm.model.entity.User)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.persistence.util.finder.EntityFinder com.epam.esm.service.service.user.UserServiceImpl.getFinder()>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.persistence.util.finder.impl.UserFinder com.epam.esm.service.service.user.UserServiceImpl.getFinder()>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.service.service.user.UserServiceImpl.readAll() throws com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.util.Optional com.epam.esm.service.service.user.UserServiceImpl.readOptional(int)>
19/05/2021 18:02:54 TRACE - <Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()>
19/05/2021 18:02:54 TRACE - <Found 'hashCode' method: public native int java.lang.Object.hashCode()>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public default java.lang.String com.epam.esm.service.service.EntityService.decodeParam(java.lang.String)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public default int org.springframework.aop.framework.Advised.getAdvisorCount()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'userServiceImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'certificateServiceImpl'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'orderServiceImpl' via constructor to bean named 'orderDAOImpl'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'orderServiceImpl' via constructor to bean named 'orderValidator'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'orderServiceImpl' via constructor to bean named 'userServiceImpl'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'orderServiceImpl' via constructor to bean named 'certificateServiceImpl'>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.order.OrderServiceImpl.update(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException,com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.model.entity.Order com.epam.esm.service.service.order.OrderServiceImpl.update(com.epam.esm.model.entity.Order): null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public java.util.List com.epam.esm.service.service.order.OrderServiceImpl.read(org.springframework.util.MultiValueMap) throws com.epam.esm.service.exceptions.NotFoundException,com.epam.esm.service.exceptions.BadRequestException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.order.OrderServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.model.entity.Order com.epam.esm.service.service.order.OrderServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public void com.epam.esm.service.service.order.OrderServiceImpl.delete(int) throws com.epam.esm.service.exceptions.BadRequestException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.order.OrderServiceImpl.create(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.model.entity.Order com.epam.esm.service.service.order.OrderServiceImpl.create(com.epam.esm.model.entity.Order) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.persistence.util.finder.impl.OrderFinder com.epam.esm.service.service.order.OrderServiceImpl.getFinder(): LookupOverride for method 'getFinder'>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.persistence.util.finder.EntityFinder com.epam.esm.service.service.order.OrderServiceImpl.getFinder(): LookupOverride for method 'getFinder'>
19/05/2021 18:02:54 TRACE - <MethodOverride for public java.util.List com.epam.esm.service.service.order.OrderServiceImpl.readAll() throws com.epam.esm.service.exceptions.NotFoundException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public com.epam.esm.model.entity.Order com.epam.esm.service.service.order.OrderServiceImpl.createOrder(com.epam.esm.model.entity.Certificate,com.epam.esm.model.entity.User,int) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public java.util.Optional com.epam.esm.service.service.order.OrderServiceImpl.readOptional(int): null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public boolean java.lang.Object.equals(java.lang.Object): null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public java.lang.String java.lang.Object.toString(): null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public native int java.lang.Object.hashCode(): null>
19/05/2021 18:02:54 TRACE - <MethodOverride for protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException: null>
19/05/2021 18:02:54 TRACE - <MethodOverride for public default java.lang.String com.epam.esm.service.service.EntityService.decodeParam(java.lang.String): null>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'orderServiceImpl' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Adding transactional method 'com.epam.esm.service.service.order.OrderServiceImpl$$EnhancerBySpringCGLIB$$a5c07c48.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:54 TRACE - <Creating implicit proxy for bean 'orderServiceImpl' with 0 common interceptors and 1 specific interceptors>
19/05/2021 18:02:54 TRACE - <Creating CGLIB proxy: SingletonTargetSource for target object [com.epam.esm.service.service.order.OrderServiceImpl$$EnhancerBySpringCGLIB$$a5c07c48@65259737]>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.order.OrderServiceImpl.update(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException,com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Order com.epam.esm.service.service.order.OrderServiceImpl.update(com.epam.esm.model.entity.Order)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.service.service.order.OrderServiceImpl.read(org.springframework.util.MultiValueMap) throws com.epam.esm.service.exceptions.NotFoundException,com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.order.OrderServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Order com.epam.esm.service.service.order.OrderServiceImpl.read(int) throws com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public void com.epam.esm.service.service.order.OrderServiceImpl.delete(int) throws com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.CustomEntity com.epam.esm.service.service.order.OrderServiceImpl.create(com.epam.esm.model.entity.CustomEntity) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:54 TRACE - <Adding transactional method 'com.epam.esm.service.service.order.OrderServiceImpl$$EnhancerBySpringCGLIB$$a5c07c48.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Order com.epam.esm.service.service.order.OrderServiceImpl.create(com.epam.esm.model.entity.Order) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.persistence.util.finder.impl.OrderFinder com.epam.esm.service.service.order.OrderServiceImpl.getFinder()>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.persistence.util.finder.EntityFinder com.epam.esm.service.service.order.OrderServiceImpl.getFinder()>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.util.List com.epam.esm.service.service.order.OrderServiceImpl.readAll() throws com.epam.esm.service.exceptions.NotFoundException>
19/05/2021 18:02:54 TRACE - <Adding transactional method 'com.epam.esm.service.service.order.OrderServiceImpl$$EnhancerBySpringCGLIB$$a5c07c48.createOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public com.epam.esm.model.entity.Order com.epam.esm.service.service.order.OrderServiceImpl.createOrder(com.epam.esm.model.entity.Certificate,com.epam.esm.model.entity.User,int) throws com.epam.esm.service.exceptions.ValidationException,com.epam.esm.service.exceptions.BadRequestException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.util.Optional com.epam.esm.service.service.order.OrderServiceImpl.readOptional(int)>
19/05/2021 18:02:54 TRACE - <Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()>
19/05/2021 18:02:54 TRACE - <Found 'hashCode' method: public native int java.lang.Object.hashCode()>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException>
19/05/2021 18:02:54 TRACE - <Unable to apply any optimizations to advised method: public default java.lang.String com.epam.esm.service.service.EntityService.decodeParam(java.lang.String)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public default int org.springframework.aop.framework.Advised.getAdvisorCount()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException>
19/05/2021 18:02:54 TRACE - <Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'orderServiceImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'userServiceImpl'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'userDTOMapper'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'userDTOMapper'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'modelMapper'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'userDTOMapper' via constructor to bean named 'modelMapper'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'userDTOMapper' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'userDTOMapper'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'orderDTOMapper'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'orderDTOMapper'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'modelMapper'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'orderDTOMapper' via constructor to bean named 'modelMapper'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'orderDTOMapper' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'orderDTOMapper'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'certificateServiceImpl'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'userController' via constructor to bean named 'orderServiceImpl'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'userController' via constructor to bean named 'userServiceImpl'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'userController' via constructor to bean named 'userDTOMapper'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'userController' via constructor to bean named 'orderDTOMapper'>
19/05/2021 18:02:54 DEBUG - <Autowiring by type from bean name 'userController' via constructor to bean named 'certificateServiceImpl'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'userController' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'userController'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'certificateDTOMapper'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'orderDTOMapper'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'tagDTOMapper'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'userDTOMapper'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'controllerExceptionHandler'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'controllerExceptionHandler'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'controllerExceptionHandler' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'controllerExceptionHandler'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'certificateServiceImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'orderServiceImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'tagServiceImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'userServiceImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'certificateValidator'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'orderValidator'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'tagValidator'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'userValidator'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'certificateDAOImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'orderDAOImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'tagDAOImpl'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'userDAOImpl'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'com.epam.esm.model.ModelConfig'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'com.epam.esm.model.ModelConfig'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'com.epam.esm.model.ModelConfig' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'com.epam.esm.model.ModelConfig'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.domain.EntityScanPackages'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'com.epam.esm.PersistenceConfig'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'com.epam.esm.PersistenceConfig'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'com.epam.esm.PersistenceConfig' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'com.epam.esm.PersistenceConfig'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'com.epam.esm.service.ServiceConfig'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'com.epam.esm.service.ServiceConfig'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'com.epam.esm.service.ServiceConfig' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'com.epam.esm.service.ServiceConfig'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'modelMapper'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'propertySourcesPlaceholderConfigurer'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'websocketServletWebServerCustomizer'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration' to allow for resolving potential circular references>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Finished creating instance of bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'tomcatServletWebServerFactory'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'servletWebServerFactoryCustomizer'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'>
19/05/2021 18:02:54 DEBUG - <Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'>
19/05/2021 18:02:54 TRACE - <Creating instance of bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'>
19/05/2021 18:02:54 TRACE - <Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'>
19/05/2021 18:02:54 TRACE - <Eagerly caching bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter' to allow for resolving potential circular references>
